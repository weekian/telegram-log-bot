{"version":3,"sources":["../src/server.js"],"names":["Server","port","environment","app","logFormat","use","get","req","res","send","listen"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA;AACA;IACqBA,M;;;AACjB,kBAAYC,IAAZ,EAAkBC,WAAlB,EAA+B;AAAA;AAC3B,SAAKC,GAAL,GAAW,uBAAX;AACA,SAAKF,IAAL,GAAYA,IAAZ;AAEA,QAAMG,SAAS,GAAGF,WAAW,KAAK,YAAhB,GAA+B,QAA/B,GAA0C,KAA5D;AACA,SAAKC,GAAL,CAASE,GAAT,CAAa,qBAAOD,SAAP,CAAb,EAL2B,CAO3B;AACA;;AACA,SAAKD,GAAL,CAASG,GAAT,CAAa,GAAb,EAAkB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5BA,MAAAA,GAAG,CAACC,IAAJ,CAAS,aAAT;AACH,KAFD;AAGH;;;;4BAEO;AACJ,WAAKN,GAAL,CAASO,MAAT,CAAgB,KAAKT,IAArB;AACH","sourcesContent":["import express from \"express\";\nimport morgan from \"morgan\";\n\n// Server is required as Heroku requires application to listen to\n// $PORT env variable. Heroku will close the application otherwise.\nexport default class Server {\n    constructor(port, environment) {\n        this.app = express();\n        this.port = port;\n\n        const logFormat = environment === \"production\" ? \"common\" : \"dev\";\n        this.app.use(morgan(logFormat));\n\n        // Generic endpoint for uptime robot to send request to\n        // Ensures application is kept 'hot'\n        this.app.get(\"/\", (req, res) => {\n            res.send(\"hello world\");\n        });\n    }\n\n    start() {\n        this.app.listen(this.port);\n    }\n}\n"],"file":"server.js"}